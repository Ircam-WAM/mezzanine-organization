// -*- coding: utf-8 -*-

// Copyright (c) 2016-2017 Ircam
// Copyright (c) 2016-2017 Jérémy Fabre

// This file is part of mezzanine-organization.

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.

// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

// Output a number in the $base-unit.
//
// @param number $number
//   The number (without unit) to output.
//
// @return number
//   The number with the base unit
@function typey-output-in-base-unit($number) {
  @if $number == 0 {
    @return 0;
  }
  @if $base-unit == rem {
    @return $number * 1rem;
  }
  @if $base-unit == px {
    @return $number * 1px;
  }
  @if $base-unit == em {
    @return $number * 1em;
  }
}

// Output a number in a chosen unit.
//
// @param number $number
//   The number (without unit) to output.
// @param string $unit
//   (optional) The unit to output, either em, px or rem.
//
// @return number
//   The number with the base unit
@function typey-output-in-unit($number, $unit: $base-unit) {
  @if $number == 0 {
    @return 0;
  }
  @if $unit == rem {
    @return $number * 1rem;
  }
  @if $unit == px {
    @return $number * 1px;
  }
  @if $unit == em {
    @return $number * 1em;
  }
}

// Remove the unit from a number.
//
// @param number $number
//   The number (with unit) to convert. Allowed units: any
//
// @return number
//   The number without the unit.
@function typey-strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}
