// -*- coding: utf-8 -*-

// Copyright (c) 2016-2017 Ircam
// Copyright (c) 2016-2017 Jérémy Fabre

// This file is part of mezzanine-organization.

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.

// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

// Typeset your type.
//
// @param string $typestyle
//   A type style from the $typestyles map.
// @param number|string $context
//   (optional) Only used if em is the $base-unit. The value of the
//   elements/parents font-size if it differs from $base-font-size.
//   Specified as a t-shirt size or value in px.
@mixin typeset($typestyle, $context: $base-font-size) {
  $typestyle: map-get($typestyles, $typestyle);

  $font-size: false;
  $line-height: false;
  $weight: false;
  $case: false;

  // Assign values to variables when $typestyle is a keyed map.
  @if type-of($typestyle) == "map" {
    @if map-has-key($typestyle, font-size) {
      $font-size: map-get($typestyle, font-size);
    }
    @if map-has-key($typestyle, line-height) {
      $line-height: map-get($typestyle, line-height);
    }
    @if map-has-key($typestyle, weight) {
      $weight: map-get($typestyle, weight);
    }
    @if map-has-key($typestyle, case) {
      $case: map-get($typestyle, case);
    }
  }

  // Assign values to variables when $typestyle is shorthand.
  @if type-of($typestyle) == "list" {
    @each $value in $typestyle {
      // The first value is always font-size.
      @if index($typestyle, $value) == 1 {
        $font-size: $value;
      }
      // This is a line-height value.
      @if type-of($value) == "number" and not(index($typestyle, $value) == 1) {
        $line-height: $value;
      }
      // This is a font-weight value.
      @if map-has-key($font-weight, $value) {
        $weight: $value;
      }
      // This is a case value.
      @if type-of($value) == "string" and not(index($typestyle, $value) == 1) {
        $case: $value;
      }
    }
  }

  // Output properties.
  @if $font-size {
    @include font-size($font-size, $context);
  }
  @if $line-height {
    @include typey-debug-grid($line-height, $font-size);
    @include line-height($line-height, $font-size);
  }
  @else {
    // Using default line-height so set debug grid accordingly.
    @include typey-debug-grid($base-line-height, $font-size);
  }
  @if $weight {
    font-weight: weight($weight);
  }
  @if $case {
    text-transform: $case;
  }
}
