# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-11-03 14:21
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mezzanine.core.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
        ('organization-projects', '0023_auto_20161026_1025'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectDemo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords_string', models.CharField(blank=True, editable=False, max_length=500)),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('slug', models.CharField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=2000, null=True, verbose_name='URL')),
                ('_meta_title', models.CharField(blank=True, help_text='Optional title to be used in the HTML title tag. If left blank, the main title field will be used.', max_length=500, null=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('gen_description', models.BooleanField(default=True, help_text='If checked, the description will be automatically generated from content. Uncheck if you want to manually set a custom description.', verbose_name='Generate description')),
                ('created', models.DateTimeField(editable=False, null=True)),
                ('updated', models.DateTimeField(editable=False, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Published')], default=2, help_text='With Draft chosen, will only be shown for admin users on the site.', verbose_name='Status')),
                ('publish_date', models.DateTimeField(blank=True, db_index=True, help_text="With Published chosen, won't be shown until this time", null=True, verbose_name='Published from')),
                ('expiry_date', models.DateTimeField(blank=True, help_text="With Published chosen, won't be shown after this time", null=True, verbose_name='Expires on')),
                ('short_url', models.URLField(blank=True, null=True)),
                ('in_sitemap', models.BooleanField(default=True, verbose_name='Show in sitemap')),
                ('content', mezzanine.core.fields.RichTextField(verbose_name='Content')),
                ('directory', models.CharField(blank=True, max_length=256, null=True, verbose_name='directory')),
                ('build_commands', models.TextField(blank=True, verbose_name='build commands')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demos', to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
            options={
                'verbose_name_plural': 'project demos',
                'verbose_name': 'project demo',
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('name', models.CharField(max_length=512, verbose_name='name')),
                ('url', models.URLField(blank=True, max_length=512, verbose_name='URL')),
                ('access', models.CharField(choices=[('public', 'public'), ('shared', 'shared'), ('private', 'private')], default='private', max_length=64, verbose_name='access')),
                ('branch', models.CharField(default='master', max_length=32, verbose_name='branch')),
            ],
            options={
                'verbose_name_plural': 'repositories',
                'verbose_name': 'repository',
            },
        ),
        migrations.CreateModel(
            name='RepositorySystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('name', models.CharField(max_length=512, verbose_name='name')),
                ('type', models.CharField(max_length=32, verbose_name='type')),
                ('clone_command', models.CharField(max_length=256, verbose_name='clone command')),
                ('pull_command', models.CharField(max_length=256, verbose_name='pull command')),
                ('checkout_command', models.CharField(max_length=256, verbose_name='checkout command')),
                ('branch_command', models.CharField(max_length=256, verbose_name='branch command')),
            ],
            options={
                'verbose_name_plural': 'repository systems',
                'verbose_name': 'repository system',
            },
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'ordering': ['-date_from', '-date_to'], 'verbose_name': 'project', 'verbose_name_plural': 'projects'},
        ),
        migrations.AlterModelOptions(
            name='projectprogram',
            options={'ordering': ['name'], 'verbose_name': 'program', 'verbose_name_plural': 'programs'},
        ),
        migrations.AlterModelOptions(
            name='projectprogramtype',
            options={'ordering': ['name'], 'verbose_name': 'program type', 'verbose_name_plural': 'program types'},
        ),
        migrations.AlterModelOptions(
            name='projecttopic',
            options={'ordering': ['name'], 'verbose_name': 'project topic', 'verbose_name_plural': 'project topics'},
        ),
        migrations.AlterModelOptions(
            name='projecttopicpage',
            options={'ordering': ('_order',), 'verbose_name': 'project topic page', 'verbose_name_plural': 'project topic pages'},
        ),
        migrations.AddField(
            model_name='repository',
            name='system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repositories', to='organization-projects.RepositorySystem', verbose_name='system'),
        ),
        migrations.AddField(
            model_name='projectdemo',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demos', to='organization-projects.Project', verbose_name='project'),
        ),
        migrations.AddField(
            model_name='projectdemo',
            name='repository',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demos', to='organization-projects.Repository', verbose_name='repository'),
        ),
        migrations.AddField(
            model_name='projectdemo',
            name='site',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.Site'),
        ),
    ]
